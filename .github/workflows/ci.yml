name: CI

on:
  push:
    paths:
      - 'source/**.go'
      - 'go.mod'
      - '.github/workflows/ci.yml'
    branches:
      - '**'
    tags:
     - '*.*.*'
  workflow_dispatch:

env:
  PROJECT_NAME: healthcheck

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        operatingSystem: [ 'windows', 'linux' ]
        architecture: [ 'amd64', '386', 'arm64', 'arm' ]
        library: [ 'glibc', 'musl' ]
        include:
          - operatingSystem: linux
            library: glibc
          - operatingSystem: linux
            library: musl
    permissions:
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Install build tools
        if: ${{ matrix.library == 'musl' }}
        run: sudo apt-get install --no-install-recommends --yes musl-tools

      - name: Create artifact & executable name
        id: names
        env:
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          OPERATING_SYSTEM: ${{ matrix.operatingSystem }}
          ARCHITECTURE: ${{ matrix.architecture }}
          LIBRARY: ${{ matrix.library }}
        uses: actions/github-script@v6
        with:
          script: |
            const { PROJECT_NAME, OPERATING_SYSTEM, ARCHITECTURE, LIBRARY } = process.env;

            const artifactName = [ PROJECT_NAME, OPERATING_SYSTEM, ARCHITECTURE, LIBRARY ]
              .filter( value => value != '' )
              .join( '-' );

            const executableName = artifactName + ( OPERATING_SYSTEM == 'windows' ? '.exe' : '' );

            core.setOutput( 'artifact', artifactName );
            core.setOutput( 'executable', executableName );

      - name: Build executable
        env:
          GOOS: ${{ matrix.operatingSystem }}
          GOARCH: ${{ matrix.architecture }}
          CC: ${{ matrix.library == 'musl' && '/usr/bin/musl-gcc' || '' }}
        run: |
          go build -v -ldflags='-s -w' -o ${{ steps.names.outputs.executable }} ./source/
          strip ${{ steps.names.outputs.executable }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.names.outputs.artifact }}
          path: ${{ steps.names.outputs.executable }}

  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Calculate checksums
        run: |
          md5sum artifacts/${{ env.PROJECT_NAME }}-*/${{ env.PROJECT_NAME }}-* > checksums/MD5SUMS.txt
          sha1sum artifacts/${{ env.PROJECT_NAME }}-*/${{ env.PROJECT_NAME }}-* > checksums/SHA1SUMS.txt
          sha256sum artifacts/${{ env.PROJECT_NAME }}-*/${{ env.PROJECT_NAME }}-* > checksums/SHA256SUMS.txt
          sha512sum artifacts/${{ env.PROJECT_NAME }}-*/${{ env.PROJECT_NAME }}-* > checksums/SHA512SUMS.txt

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/${{ env.PROJECT_NAME }}-*/${{ env.PROJECT_NAME }}-*
            checksums/*.txt
          token: ${{ secrets.GITHUB_TOKEN }}
